---
interface ImageandCaption{
    src : string;
    caption?: string | null;
    size: [number,number];
}

type Image = string | ImageandCaption;

const { images }= Astro.props as { images: Image[] };;

const normal : Required<ImageandCaption>[] = images.map((image) => 
    typeof image === "string" 
    ? {src : image , caption: null , size: [700,800]} 
    : {
        src : image.src,
        caption : image.caption ?? null,
        size : image.size ?? [700,800]
    }
);
---

<style>
    .slide{
        position: absolute;
        opacity:0;
        z-index: 0;
        top: 0px;
        transition: opacity 0.5s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        height:100%
    }
    .active{
        opacity:1;
        z-index:1;
        transition: opacity 1s ease;
    }

    p{
        position:absolute;
        background-color: rgba(0,0,0,0.5);
        color:white;
        bottom:0px;
        left:0px;
        margin-bottom: 0px;
        font-size: 20px;
        padding: 5px;
    }
    .photoreel{
        position: relative;
        margin-top: 40px;
        display: flex;
        flex-direction: row;
        justify-content: center;
    }
    .control{
        position: absolute;
    }
    #prevc{
        display: flex;
        top:280px;
        left:0px;
        height:60px;
        width:60px;
        justify-content: center;
        align-self: center;
    }
    #prev{
        align-self: center;
        margin: auto;
        height: 30px;
        width:30px;
    }
    #forwc{
        display: flex;
        height: 60px;
        width:60px;
        top:280px;
        right:0px;
        justify-content: center;
        align-self: center;
    }
    #forw{
        align-self: center;
        margin: auto;
        height: 30px;
        width:30px;
    }
    .photoreel{
        background-color: rgb(0,0,0,0.8);
        height: 700px;
        width:100%;
    }
</style>
<div class = "photoreel">
    <div class="control" id = "prevc">
        <img id="prev" src="/images/backbutton.png" />
    </div>
    {normal.map((image,i) => (
        <div class={`slide${i === 0?" active":""}`} data-index = {i}>
            <img src = {image.src} alt = {image.caption || `Photo ${i+1}`} style={`height: ${image.size[0]}px; width: ${image.size[1]}px; object-fit: cover;`} />
            {image.caption && <p class="caption"> {image.caption} </p>}
        </div>
    ))}
    <div class="control" id = "forwc">
        <img id="forw" src="/images/forwbutton.png" />
    </div>
</div>
<script>

    let currentIndex = 0;
    const slides = document.querySelectorAll(".slide");
    let intervalID : ReturnType<typeof setInterval>;;

    document.getElementById("prev")?.addEventListener("click", () => {
        currentIndex = (currentIndex - 1 + slides.length) % slides.length;
        showSlide(currentIndex);
        restartAuto();
    });

    document.getElementById("forw")?.addEventListener("click", () => {
        currentIndex = (currentIndex - 1 + slides.length) % slides.length;
        showSlide(currentIndex);
        restartAuto();
    });

    function startAutoScroll(){
        intervalID = setInterval(() => {
            currentIndex = (currentIndex + 1) % slides.length;
            showSlide(currentIndex);
        }, 6000);
    }

    function restartAuto(){
        clearInterval(intervalID);
        startAutoScroll();
    }

    function showSlide(index : number){
        slides.forEach((slide,i) => {
            slide.classList.remove("active");
        });
        setTimeout( () => {slides.forEach((slide,i) => {
            slide.classList.toggle("active",i==index);
            })},550);
    }


</script>